params:
  db_synchronous_commit: "off"
  db_shared_buffers: "256MB"
  db_work_mem: "10MB"
  db_default_text_search_config: "pg_catalog.english"

hooks:
  before_code:
    - replace:
       filename: /etc/service/unicorn/run
       from: "# postgres"
       to: sv start postgres || exit 1

run:
  - exec: mkdir -p /shared/postgres_run
  - exec: chown postgres:postgres /shared/postgres_run
  - exec: chmod 775 /shared/postgres_run
  - exec: rm -fr /var/run/postgresql
  - exec: ln -s /shared/postgres_run /var/run/postgresql
  - exec: socat /dev/null UNIX-CONNECT:/shared/postgres_run/.s.PGSQL.5432 || exit 0 && echo postgres already running stop container ; exit 1
  - exec: rm -fr /shared/postgres_run/.s*
  - exec: rm -fr /shared/postgres_run/*.pid
  - file:
     path: /etc/service/postgres/run
     chmod: "+x"
     contents: |
        #!/bin/sh
        exec 2>&1
        HOME=/var/lib/postgresql USER=postgres exec chpst -u postgres:postgres:ssl-cert -U postgres:postgres:ssl-cert /usr/lib/postgresql/9.3/bin/postmaster -D /etc/postgresql/9.3/main

  - file:
     path: /etc/runit/3.d/99-postgres
     chmod: "+x"
     contents: |
       #!/bin/bash
       sv stop postgres

  - file:
     path: /root/upgrade_postgres
     chmod: "+x"
     contents: |
       #!/bin/bash
       if [ "9.2" = `cat /shared/postgres_data/PG_VERSION` ]; then
         echo Upgrading PostgreSQL to from version 9.2 to 9.3
         rm -fr /shared/postgres_data_new
         install -d -m 0755 -o postgres -g postgres /shared/postgres_data_new && sudo -u postgres /usr/lib/postgresql/9.3/bin/initdb -D /shared/postgres_data_new || exit 0
         apt-get update
         apt-get install -y postgresql-9.2
         /etc/init.d/postgresql stop
         rm -fr /shared/postgres_data/postmaster.pid
         cd ~postgres
         cp /etc/postgresql/9.2/main/*.conf /shared/postgres_data
         echo  >> /shared/postgres_data/postgresql.conf
         echo "data_directory = '/shared/postgres_data'" >> /shared/postgres_data/postgresql.conf
         SUCCESS=true
         sudo -u postgres /usr/lib/postgresql/9.3/bin/pg_upgrade -d /shared/postgres_data -D /shared/postgres_data_new -b /usr/lib/postgresql/9.2/bin -B /usr/lib/postgresql/9.3/bin || SUCCESS=false

         if [[ "$SUCCESS" == 'false' ]]; then
           echo -------------------------------------------------------------------------------------
           echo UPGRADE OF POSTGRES FAILED
           echo
           echo You are going to need to export your data and import into a clean instance:
           echo
           echo Add the line: 'base_image: "samsaffron/discourse:0.1.1"'
           echo Change: "templates/postgres.template.yml TO templates/postgres.9.2.template.yml"
           echo
           echo Run "./launcher bootstrap" again
           echo
           echo When your instance is running:
           echo - Go to the admin UI, enable readonly and backup your site
           echo
           echo Then destroy your container "./launcher destroy standalone"
           echo Undo the base_image and postgres.9.2 template from your container config
           echo Run: "sudo mv /var/discourse/shared/postgres_data /var/shared/postgres_data_old"
           echo Run: "./launcher bootstrap"
           echo
           echo "Login to the blank site, and import your backup (remember to set the allow_restore site setting)"
           echo Restart your container: "./launcher restart"
           echo -------------------------------------------------------------------------------------
           exit 1
         fi

         mv /shared/postgres_data /shared/postgres_data_old
         mv /shared/postgres_data_new /shared/postgres_data

         echo -------------------------------------------------------------------------------------
         echo UPGRADE OF POSTGRES COMPLETE
         echo
         echo Old 9.2 database is stored at /shared/postgres_data_old
         echo
         echo Please run "./launcher bootstrap" again
         echo -------------------------------------------------------------------------------------
         exit 1
       fi
  - exec:
      cmd:
        - chown -R root /var/lib/postgresql/9.3/main
        - "[ ! -e /shared/postgres_data ] && install -d -m 0755 -o postgres -g postgres /shared/postgres_data && sudo -E -u postgres /usr/lib/postgresql/9.3/bin/initdb -D /shared/postgres_data || exit 0"
        - chown -R postgres:postgres /shared/postgres_data
        - chown -R postgres:postgres /var/run/postgresql

  - exec: /root/upgrade_postgres
  - exec: rm /root/upgrade_postgres

  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: "data_directory = '/var/lib/postgresql/9.3/main'"
      to: "data_directory = '/shared/postgres_data'"

  # listen on all interfaces
  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?listen_addresses *=.*/
      to: "listen_addresses = '*'"

  # sync commit off is faster and less spiky, also marginally less safe
  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?synchronous_commit *=.*/
      to: "synchronous_commit = $db_synchronous_commit"

  # default is 128MB which is way too small
  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?shared_buffers *=.*/
      to: "shared_buffers = $db_shared_buffers"

  # default is 1MB which is too small
  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?work_mem *=.*/
      to: "work_mem = $db_work_mem"

  # allow for other
  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?default_text_search_config *=.*/
      to: "default_text_search_config = '$db_default_text_search_config'"

  # Necessary to enable backups
  - exec:
      cmd:
        - install -d -m 0755 -o postgres -g postgres /shared/postgres_backup

  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?max_wal_senders *=.*/
      to: "max_wal_senders = 4"

  - replace:
      filename: "/etc/postgresql/9.3/main/postgresql.conf"
      from: /#?wal_level *=.*/
      to: "wal_level = hot_standby"

  - replace:
      filename: "/etc/postgresql/9.3/main/pg_hba.conf"
      from: /^#local +replication +postgres +peer$/
      to: "local replication postgres  peer"

  # allow all to connect in with md5 auth
  - replace:
      filename: "/etc/postgresql/9.3/main/pg_hba.conf"
      from: /^host.*all.*all.*127.*$/
      to: "host all all 0.0.0.0/0 md5"

  - exec:
      background: true
      # use fast shutdown for pg
      stop_signal: INT
      cmd: HOME=/var/lib/postgresql USER=postgres exec chpst -u postgres:postgres:ssl-cert -U postgres:postgres:ssl-cert /usr/lib/postgresql/9.3/bin/postmaster -D /etc/postgresql/9.3/main

  # give db a few secs to start up
  - exec: "sleep 5"

  - exec: su postgres -c 'createdb discourse' || true
  - exec: su postgres -c 'psql discourse -c "create user discourse;"' || true
  - exec: su postgres -c 'psql discourse -c "grant all privileges on database discourse to discourse;"' || true
  - exec: su postgres -c 'psql discourse -c "alter schema public owner to discourse;"'
  - exec: su postgres -c 'psql template1 -c "create extension if not exists hstore;"'
  - exec: su postgres -c 'psql template1 -c "create extension if not exists pg_trgm;"'
  - exec: su postgres -c 'psql discourse -c "create extension if not exists hstore;"'
  - exec: su postgres -c 'psql discourse -c "create extension if not exists pg_trgm;"'

  - file:
     path: /var/lib/postgresql/take-database-backup
     chown: postgres:postgres
     chmod: "+x"
     contents: |
        #!/bin/bash
        ID=db-$(date +%F_%T)
        FILENAME=/shared/postgres_backup/$ID.tar.gz
        pg_basebackup --format=tar --pgdata=- --xlog --gzip --label=$ID > $FILENAME
        echo $FILENAME

  - file:
     path: /var/spool/cron/crontabs/postgres
     contents: |
        # m h  dom mon dow   command
        #MAILTO=?
        #0 */4 * * * /var/lib/postgresql/take-database-backup

  - exec:
      hook: postgres
      cmd: "echo postgres installed!"
